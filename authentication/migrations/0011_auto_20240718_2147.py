# Generated by Django 5.0.6 on 2024-07-18 21:47

from django.db import migrations

# Import des modèles User, Group, et Permission
def create_groups(apps, schema_migration):
    User = apps.get_model('authentication', 'User')
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

# Récupération des permissions dans Permission
    add_blog = Permission.objects.get(codename='add_blog')
    change_blog = Permission.objects.get(codename='change_blog')
    delete_blog = Permission.objects.get(codename='delete_blog')
    view_blog = Permission.objects.get(codename='view_blog')

    Creators_permissions = [

        add_blog,
        change_blog,
        delete_blog,
        view_blog,

    ]


    
# Créations des groupes et attributions respectives des permissions à ces derniers 

   #creators, created = Group.objects.get_or_create(name='Creators') # A substituer
    Creators = Group(name='Creators')
    Creators.save()
    Creators.permissions.set(Creators_permissions)
    
    #subscibers, created = Group.objects.get_or_create(name='Subscribers') # A substituer
    Subscribers = Group(name='Subscribers')
    Subscribers.save()
    Subscribers.permissions.set([view_blog])
    

    # for user in User.objects.all():
    #     if user.role == User.UserRole.CREATOR:
    #         user.groups.add(Creators)
    #     elif user.role == User.UserRole.SUBSCRIBER:
    #         user.groups.add(Subscribers)

# Attribution des groupes (et des permessions associées) aux utilisateurs en fonction de leurs rôles
    for user in User.objects.all():
        if user.role == 'CREATOR':
            Creators.user_set.add(user)
        elif user.role == 'SUBSCRIBER':
            Subscribers.user_set.add(user)




class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0010_auto_20240718_1310'),
    ]

    operations = [
        migrations.RunPython(create_groups)
    ]
